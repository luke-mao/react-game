{"version":3,"sources":["components/FooterBar.js","components/MainBody.js","images/logo.png","components/Sidebar.js","pages/DashBoard.js","pages/Snek.js","components/DialogWindow.js","pages/Tictac.js","pages/Tower.js","App.js","index.js"],"names":["styles","theme","position","height","bottom","right","backgroundColor","breakpoints","down","width","only","up","FooterBar","useTheme","Box","sx","top","left","MainBody","children","sidebar","display","flexDirection","alignItems","logo","marginTop","marginBottom","xs","sm","md","lg","xl","stackLinks","mt","displaySmall","displayBig","Sidebar","Avatar","variant","src","Logo","alt","Stack","direction","justifyContent","spacing","Link","to","component","RouterLink","Typography","box","line1","color","fontSize","fontFamily","box2","line2","button","ml","DashBoard","useState","numGamesLeft","setNumGamesLeft","useEffect","isSet","localStorage","getItem","value","match","numValue","parseInt","alert","reset","setItem","Button","size","onClick","Snek","border","transform","DialogWindow","isOpen","buttonText","buttonOnClick","initialBoard","Array","fill","flexWrap","cell","m","p","messageText","cellBorderStyle","idx","borders","borderRight","borderBottom","cellBackgroundColor","isPlayer1","content","Tictac","board","setBoard","setIsPlayer1","isDialogOpen","setIsDialogOpen","winner","setWinner","totalMoves","setTotalMoves","isComplete","thisBoard","isAllFilled","i","length","isWin","checkRow","checkColumn","checkDiagonal1","checkDiagonal2","navigate","useNavigate","map","newBoard","gameStatus","console","log","emptySlots","filter","play","replace","container","horizontalLine","verticalLine","block","colors","widths","numBlocks","setNumBlocks","blockFrom","setBlockFrom","blockBottomPosition","blocks","blockTo","check1","check2","check3","parseFloat","thisBlock","shift","move","idx2","App","path","element","createTheme","values","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.47c596b5.chunk.js","sourcesContent":["import { Box, useTheme } from '@mui/system'\r\nimport React from 'react'\r\n\r\nconst styles = (theme) => ({\r\n  position: 'fixed',\r\n  height: '50px',\r\n  bottom: '0',\r\n  right: '0',\r\n  backgroundColor: '#999',\r\n\r\n  // span the full width, but consider the sidebar width.\r\n  // sidebar has 30px, 60px, and 100px\r\n  [theme.breakpoints.down('md')]: {\r\n    width: 'calc(100% - 30px)',\r\n  },\r\n  [theme.breakpoints.only('md')]: {\r\n    width: 'calc(100% - 60px)',\r\n  },\r\n  [theme.breakpoints.up('lg')]: {\r\n    width: 'calc(100% - 100px)',\r\n  },\r\n});\r\n\r\nexport default function FooterBar() {\r\n  const theme = useTheme();\r\n  \r\n  // the box has no content\r\n  return (\r\n    <Box\r\n      sx={styles(theme)}\r\n    />\r\n  )\r\n}\r\n","import { useTheme } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst styles = (theme) => ({\r\n  position: 'fixed',\r\n  top: '0',\r\n\r\n  // height is 100% minus the footer bar height at 50px.\r\n  height: 'calc(100% - 50px)',\r\n\r\n  // width: the sidebar has 30px, 60px and 100px.\r\n  [theme.breakpoints.down('md')]: {\r\n    left: '30px',\r\n    width: 'calc(100% - 30px)',\r\n  },\r\n  [theme.breakpoints.only('md')]: {\r\n    left: '60px',\r\n    width: 'calc(100% - 60px)',\r\n  },\r\n  [theme.breakpoints.up('lg')]: {\r\n    left: '100px',\r\n    width: 'calc(100% - 100px)',\r\n  },\r\n\r\n  // add color to check the position\r\n  // backgroundColor: '#666',\r\n});\r\n\r\nexport default function MainBody({ children }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={styles(theme)}\r\n    >\r\n      {children}\r\n    </Box>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.430d4ecb.png\";","import React from 'react'\r\nimport { Box } from '@mui/system';\r\nimport Logo from '../images/logo.png';\r\nimport { Avatar, Link, Stack, Typography } from '@mui/material';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst styles = (theme) => ({\r\n  sidebar: {\r\n    position: 'fixed',\r\n    backgroundColor: '#eee', \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    width: '100px',\r\n\r\n    // the width changes between 30px, 60px, 100px\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '30px',\r\n    },\r\n    [theme.breakpoints.only('md')]: {\r\n      width: '60px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '100px',\r\n    },\r\n  },\r\n  logo: {\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n    height: '50px',\r\n    width: '50px',\r\n\r\n    // logo disappears for under 800px\r\n    display: {\r\n      xs: 'none',\r\n      sm: 'none',\r\n      md: 'block',\r\n      lg: 'block',\r\n      xl: 'block',\r\n    },\r\n  },\r\n  stackLinks: {\r\n    mt: 5,\r\n  },\r\n  // sepaaration of 1400px, the textcontent changes\r\n  displaySmall: {\r\n    // below 800px\r\n    display: {\r\n      xs: 'block',\r\n      sm: 'block',\r\n      md: 'block',\r\n      lg: 'none',\r\n      xl: 'none'\r\n    }\r\n  },\r\n  displayBig: {\r\n    // more than 1400px\r\n    display: {\r\n      xs: 'none',\r\n      sm: 'none',\r\n      md: 'none',\r\n      lg: 'block',\r\n      xl: 'block',\r\n    }\r\n  }\r\n});\r\n\r\nexport default function Sidebar() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={styles(theme).sidebar}\r\n    >\r\n      <Avatar\r\n        variant='square'\r\n        sx={styles(theme).logo}\r\n        src={Logo}\r\n        alt='logo'\r\n      />\r\n      <Stack\r\n        sx={styles(theme).stackLinks}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={7}\r\n      >\r\n        {/* each link has three display mode */}\r\n        <Link \r\n          to='/home'\r\n          component={RouterLink}\r\n        >\r\n          <Typography sx={styles(theme).displaySmall}>H</Typography>\r\n          <Typography sx={styles(theme).displayBig}>Home</Typography>\r\n        </Link>\r\n        <Link \r\n          to='/tictactoe'\r\n          component={RouterLink}\r\n        >\r\n          <Typography sx={styles(theme).displaySmall}>Ti</Typography>\r\n          <Typography sx={styles(theme).displayBig}>Tictac</Typography>\r\n        </Link>\r\n        <Link \r\n          to='/tower'\r\n          component={RouterLink}\r\n        >\r\n          <Typography sx={styles(theme).displaySmall}>To</Typography>\r\n          <Typography sx={styles(theme).displayBig}>Tower</Typography>\r\n        </Link>\r\n        <Link \r\n          to='/snek'\r\n          component={RouterLink}\r\n        >\r\n          <Typography sx={styles(theme).displaySmall}>S</Typography>\r\n          <Typography sx={styles(theme).displayBig}>Snek</Typography>\r\n        </Link>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n","import { Button, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst styles = {\r\n  box: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  line1: {\r\n    color: 'blue',\r\n    fontSize: '2em',\r\n    fontFamily: 'Monospace',\r\n  },\r\n  box2: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  line2: {\r\n    color: 'blue',\r\n    fontSize: '2em',\r\n    display: 'inline',\r\n    fontFamily: 'Monospace',\r\n  },\r\n  button: {\r\n    display: 'inline',\r\n    ml: 5,\r\n  },\r\n};\r\n\r\nexport default function DashBoard() {\r\n  const [numGamesLeft, setNumGamesLeft] = useState(3);\r\n\r\n  // after loading, check with local storage\r\n  useEffect(() => {\r\n    // get from the local storage, check if the number if valid.\r\n    let isSet = false;\r\n\r\n    if (localStorage.getItem('numGamesLeft') !== null) {\r\n      // check the stored value\r\n      const value = localStorage.getItem('numGamesLeft');\r\n      const regex = /^\\d+$/;\r\n\r\n      if (value.match(regex)) {\r\n        const numValue = parseInt(value);\r\n\r\n        // if the value is 0, alert message shows congratulations\r\n        if (numValue <= 0) {\r\n          alert('Congratulations!!!');\r\n          reset();\r\n          isSet = true;\r\n        }\r\n        else if (numValue <= 3) {\r\n          setNumGamesLeft(numValue);\r\n          isSet = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!isSet) {\r\n      localStorage.setItem('numGamesLeft', '3');\r\n    }\r\n  }, []);\r\n\r\n  // button onclick\r\n  const reset = () => {\r\n    setNumGamesLeft(3);\r\n    localStorage.setItem('numGamesLeft', '3');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={styles.box}\r\n    >\r\n      <Typography\r\n        sx={styles.line1}\r\n      >\r\n        Please choose an option from the sidebar.\r\n      </Typography>\r\n      <Box\r\n        sx={styles.box2}\r\n      >\r\n        <Typography\r\n          sx={styles.line2}\r\n        >\r\n          {`Games left to win: ${numGamesLeft}`}\r\n        </Typography>\r\n        <Button\r\n          sx={styles.button}\r\n          variant='outlined'\r\n          color='primary'\r\n          size='small'\r\n          onClick={reset}\r\n        >\r\n          reset\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Snek() {\r\n  return (\r\n    <div>\r\n      snek\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { Button } from '@mui/material';\r\n\r\nconst styles = {\r\n  backgroundColor: '#fff',\r\n  border: '1px solid #333',\r\n  height: '150px',\r\n  width: '300px',\r\n  position: 'absolute',\r\n  left: '50%',\r\n  top: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n}\r\n\r\nexport default function DialogWindow({ isOpen, children, buttonText, buttonOnClick }) {\r\n  if (isOpen) {\r\n    return (\r\n      <Box\r\n        sx={styles}\r\n      >\r\n        {children}\r\n        <Button\r\n          sx={{ mt: 2 }}\r\n          variant='contained'\r\n          color='secondary'\r\n          size='small'\r\n          onClick={buttonOnClick}\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n  else {\r\n    return <></>\r\n  }\r\n}\r\n","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router';\r\nimport DialogWindow from '../components/DialogWindow';\r\n\r\n// initial board\r\nconst initialBoard = new Array(9).fill('');\r\n\r\nconst styles = {\r\n  box: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  cell: {\r\n    width: '33%',\r\n    height: '33%',\r\n    m: 0,\r\n    p: 0,\r\n    fontSize: '2em',\r\n    color: 'black',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  messageText: {\r\n    fontSize: '14pt',\r\n  }\r\n};\r\n\r\n// idx = 0, 1, 2, ... 8\r\nconst cellBorderStyle = (idx) => {\r\n  const borders = {};\r\n  const value = '2px solid #333';\r\n\r\n  if (idx % 3 !== 2) {\r\n    borders.borderRight = value;\r\n  }\r\n\r\n  if (idx <= 5) {\r\n    borders.borderBottom = value;\r\n  }\r\n\r\n  return borders;\r\n};\r\n\r\n// two players have different background color\r\nconst cellBackgroundColor = (isPlayer1, content) => {\r\n  if (content === 'o' || content === 'x') {\r\n    return {\r\n      backgroundColor: 'white',\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      backgroundColor: isPlayer1 ? 'rgb(255,220,220)' : 'rgb(220,220,255)',\r\n    };\r\n  }\r\n};\r\n\r\n// code for three situations\r\nconst WIN = 1;\r\nconst TIE = 2;\r\nconst UNDERGOING = 3;\r\n\r\nexport default function Tictac() {\r\n  // configure the initial board, and initial player\r\n  const [board, setBoard] = useState(initialBoard);\r\n  const [isPlayer1, setIsPlayer1] = useState(true);\r\n\r\n  // the final dialog when game finishes\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  // game result\r\n  const [winner, setWinner] = useState('');\r\n  const [totalMoves, setTotalMoves] = useState(0);\r\n\r\n  const play = (idx) => {\r\n    // first check if the cell idx is empty. \r\n    // if it is not empty, then leave it.\r\n    if (board[idx] !== '') {\r\n      alert('Please play a valid move!!');\r\n      return;\r\n    }\r\n\r\n    const newBoard = [...board];\r\n    newBoard[idx] = isPlayer1 ? 'o' : 'x';\r\n    setBoard(newBoard);\r\n\r\n    // check the game status\r\n    const gameStatus = isComplete(newBoard);\r\n    console.log(`game status = ${gameStatus}`);\r\n\r\n    if (gameStatus === UNDERGOING) {\r\n      setIsPlayer1(!isPlayer1);\r\n    }\r\n    else {\r\n      // the game is either win, or tie.\r\n      if (gameStatus === WIN) {\r\n        if (isPlayer1) {\r\n          setWinner('Player 1');\r\n          \r\n          // the game is considered won if player1 wins the game\r\n          // get the value from localstorage\r\n          const numGamesLeft = localStorage.getItem('numGamesLeft');\r\n          const regex = /^\\d+$/;\r\n\r\n          if (numGamesLeft !== null && numGamesLeft.match(regex)) {\r\n            const value = parseInt(numGamesLeft);\r\n            localStorage.setItem('numGamesLeft', `${value - 1}`);\r\n          }\r\n          else {\r\n            localStorage.setItem('numGamesLeft', 2);\r\n          }\r\n        }\r\n        else {\r\n          setWinner('Player 2');\r\n        }\r\n      }\r\n\r\n      // count total moves\r\n      const emptySlots = newBoard.filter((content) => content === '');\r\n      if (emptySlots.length % 2 === 0) {\r\n        setTotalMoves(emptySlots.length / 2 + 1);\r\n      }\r\n      else {\r\n        setTotalMoves(((emptySlots.length - 1) / 2 + 1) + 1);\r\n      }\r\n\r\n      setIsDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  // the game is complete, when\r\n  // all 9 squares are filled,\r\n  // or when there is 3 of 0 or x in a horizontal / vertical / diagonal row. \r\n  // input the new board, since the useState update may not be ready yet.\r\n  const isComplete = (thisBoard) => {\r\n    // first check if all 9 cells are filled\r\n    let isAllFilled = true;\r\n    for (let i = 0; i < thisBoard.length; i++) {\r\n      if (thisBoard[i] === '') {\r\n        isAllFilled = false;\r\n        break;\r\n      } \r\n    }\r\n\r\n    // now check if a person win\r\n    let isWin = false;\r\n\r\n    // check horiztonal and vertical\r\n    for (let i = 0; i < 3; i++) {\r\n      const checkRow = thisBoard[3 * i] === thisBoard[3 * i + 1] \r\n        && thisBoard[3 * i] === thisBoard[3 * i + 2] \r\n        && thisBoard[3 * i ] !== ''\r\n      ;\r\n\r\n      const checkColumn = thisBoard[i] === thisBoard[i + 3]\r\n        && thisBoard[i] === thisBoard[i + 6]\r\n        && thisBoard[i] !== ''\r\n      ;\r\n\r\n      if (checkRow || checkColumn) {\r\n        isWin = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!isWin) {\r\n      // check diagonal\r\n      const checkDiagonal1 = thisBoard[0] === thisBoard[4]\r\n        && thisBoard[4] === thisBoard[8]\r\n        && thisBoard[0] !== ''\r\n      ;\r\n\r\n      const checkDiagonal2 = thisBoard[2] === thisBoard[4]\r\n        && thisBoard[4] === thisBoard[6]\r\n        && thisBoard[2] !== ''\r\n      ;\r\n\r\n      if (checkDiagonal1 || checkDiagonal2) {\r\n        isWin = true;\r\n      }\r\n    }\r\n\r\n    // determine WIN, TIE, UNDERGOING\r\n    if (isWin) {\r\n      return WIN;\r\n    }\r\n    else if (isAllFilled) {\r\n      return TIE;\r\n    }\r\n    else {\r\n      return UNDERGOING;\r\n    }\r\n  };\r\n\r\n  // when the game finishes, the dialog pops out, \r\n  // close the dialog redirects the user to the home page.\r\n  const navigate = useNavigate();\r\n  const goToHomePage = () => navigate('/', { replace: true });\r\n\r\n  return (\r\n    <Box\r\n      sx={styles.box}\r\n    >\r\n      {board.map((content, idx) => (\r\n        <Box\r\n          key={idx}\r\n          sx={{...styles.cell, ...cellBorderStyle(idx), ...cellBackgroundColor(isPlayer1, content)}}\r\n          onClick={() => play(idx)}\r\n        >\r\n          {content}\r\n        </Box>\r\n      ))}\r\n      <DialogWindow\r\n        isOpen={isDialogOpen}\r\n        buttonText='OK'\r\n        buttonOnClick={goToHomePage}\r\n      >\r\n        <Typography\r\n          sx={styles.messageText}\r\n        >\r\n          {winner === '' ? 'No one wins' : `${winner} wins`}\r\n        </Typography>\r\n        <Typography\r\n          sx={styles.messageText}\r\n        >\r\n          {`A total of ${totalMoves} were complete`}\r\n        </Typography>\r\n      </DialogWindow>\r\n    </Box>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { useNavigate } from 'react-router';\r\nimport DialogWindow from '../components/DialogWindow';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n  },\r\n  box: {\r\n    width: '30%',\r\n    height: '50%',\r\n    border: '2px dashed #999',\r\n    position: 'relative',\r\n  },\r\n  horizontalLine: {\r\n    height: '7px',\r\n    width: '30%',\r\n    backgroundColor: 'black',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    bottom: '30px',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  verticalLine: {\r\n    width: '7px',\r\n    height: '80px',\r\n    backgroundColor: 'black',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    bottom: '0px',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  block: {\r\n    height: '13px',\r\n    position: 'absolute',\r\n    border: '1px solid black',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  messageText: {\r\n    fontSize: '14pt',\r\n  }\r\n};\r\n\r\n// colors, max number of blocks = 5.\r\n// all blocks have the same height, but different widths\r\nconst colors = ['red', 'orange', 'yellow', 'blue', 'green'];\r\nconst widths = ['30%', '40%', '50%', '60%', '70%'];\r\n\r\nexport default function Snek() {\r\n  // initailly, the board is empty.\r\n  // each array represents a box\r\n  const [board, setBoard] = useState([[], [], []]);\r\n\r\n  // remember the user input\r\n  const [numBlocks, setNumBlocks] = useState(0);\r\n\r\n  // remember the from\r\n  const [blockFrom, setBlockFrom] = useState(null);\r\n\r\n  // dialog window\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  // total moves\r\n  const [totalMoves, setTotalMoves] = useState(0);\r\n\r\n  // one click to move FROM, another click to move TO.\r\n  // every time moves the block at the top.\r\n  // and that block on FROM must be smaller than the block on TO.\r\n  const move = (idx) => {\r\n    console.log(`click on idx = ${idx}, and blockFrom = ${blockFrom}`);\r\n    console.log(board);\r\n\r\n    if (blockFrom === null) {\r\n      setBlockFrom(idx);\r\n    }\r\n    else {\r\n      // blockFrom has value, now is the blockTo\r\n      const blockTo = idx;\r\n\r\n      // valid move: blockTo !== blockFrom, and blockFrom has block, \r\n      // and the top block of blockFrom is less than empty blockTo, or top block of blockTo\r\n      const check1 = blockTo !== blockFrom;\r\n      const check2 = board[blockFrom].length !== 0;\r\n      const check3 = board[blockTo].length === 0 \r\n        || parseFloat(board[blockFrom][0].width) < parseFloat(board[blockTo][0].width)\r\n      ;\r\n\r\n      if (check1 && check2 && check3) {\r\n        // increase total moves\r\n        setTotalMoves(totalMoves + 1);\r\n\r\n        // move the top block\r\n        const newBoard = [...board];\r\n        const thisBlock = newBoard[blockFrom].shift();\r\n        newBoard[blockTo] = [thisBlock, ...newBoard[blockTo]];\r\n        setBoard(newBoard);\r\n\r\n        // check if win already.\r\n        // also check if the game is completed.\r\n        // the rule has restricted the move, so only check if the array length is enough.\r\n        if (newBoard[2].length === numBlocks) {\r\n          setIsDialogOpen(true);\r\n          \r\n          // update the localStorage\r\n          const numGamesLeft = parseInt(localStorage.getItem('numGamesLeft'));\r\n          localStorage.setItem('numGamesLeft', numGamesLeft - 1);\r\n        }\r\n      }\r\n\r\n      // now, the move is either invalid, or valid & completed,\r\n      // reset the blockFrom\r\n      setBlockFrom(null);\r\n    }\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n  const goToHomePage = () => navigate('/', { replace: true });\r\n\r\n  // set the 'top' for the block. \r\n  // take account of the total number of blocks in that container\r\n  const blockBottomPosition = (idx, numBlocks) => {\r\n    return {\r\n      bottom: `${32 + (numBlocks - idx - 1) * 12}px`,\r\n    };\r\n  };\r\n\r\n\r\n  // ask the use number of blocks\r\n  useEffect(() => {\r\n    let inputNumBlocks = 3;\r\n    // while (true) {\r\n    //   let inputNumBlocks = prompt('Please enter the number of blocks (3, 4, or 5):');\r\n    //   inputNumBlocks.trim();\r\n\r\n    //   if (inputNumBlocks === '3') {\r\n    //     numBlocks = 3;\r\n    //     break;\r\n    //   }\r\n    //   else if (inputNumBlocks === '4') {\r\n    //     numBlocks = 4;\r\n    //     break;\r\n    //   }\r\n    //   else if (inputNumBlocks === '5') {\r\n    //     numBlocks = 5;\r\n    //     break;\r\n    //   }\r\n    //   else {\r\n        //    alert('Invalid input. Please input 3, 4, or 5.');\r\n        //  }\r\n    // }\r\n\r\n    // store the number of blocks\r\n    setNumBlocks(inputNumBlocks);\r\n\r\n    // now put the blocks onto the bar\r\n    const blocks = new Array(inputNumBlocks).fill([]);\r\n    for (let i = 0; i < blocks.length; i++) {\r\n      blocks[i] = {\r\n        backgroundColor: colors[i],\r\n        width: widths[i],\r\n      }\r\n    };\r\n\r\n    // reset the board, put all blocks on the left bar\r\n    setBoard([blocks, [], []]);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={styles.container}\r\n    >\r\n      {board.map((blocks, idx) => (\r\n        <Box\r\n          key={idx}\r\n          sx={styles.box}\r\n          onClick={() => move(idx)}\r\n        >\r\n          <Box\r\n            sx={styles.horizontalLine}\r\n          />\r\n          <Box\r\n            sx={styles.verticalLine}\r\n          />\r\n          {blocks.map((block, idx2) => (\r\n            <Box\r\n              key={`block ${idx2}`}\r\n              sx={{ ...block, ...styles.block, ...blockBottomPosition(idx2, blocks.length) }}\r\n            />\r\n          ))}\r\n        </Box>\r\n      ))}\r\n      <DialogWindow\r\n        isOpen={isDialogOpen}\r\n        buttonText='OK'\r\n        buttonOnClick={goToHomePage}\r\n      >\r\n        <Typography\r\n          sx={styles.messageText}\r\n        >\r\n          {`Success in ${totalMoves} moves`}\r\n        </Typography>\r\n      </DialogWindow>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\nimport { Route, Routes } from 'react-router'\nimport FooterBar from './components/FooterBar'\nimport MainBody from './components/MainBody'\nimport Sidebar from './components/Sidebar'\nimport DashBoard from './pages/DashBoard'\nimport Snek from './pages/Snek'\nimport Tictac from './pages/Tictac'\nimport Tower from './pages/Tower'\n\nexport default function App() {\n  return (\n    <div>\n      <Sidebar/>\n      <MainBody>\n        <Routes>\n          <Route path='/home' element={<DashBoard/>}/>\n          <Route path='/tictactoe' element={<Tictac/>}/>\n          <Route path='/tower' element={<Tower/>}/>\n          <Route path='snek' element={<Snek/>}/>\n          \n          {/* default and 404 page */}\n          <Route path='/' element={<DashBoard/>}/>\n          <Route path='*' element={<DashBoard/>}/>\n        </Routes>\n      </MainBody>\n      <FooterBar/>\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { createTheme, ThemeProvider, responsiveFontSizes } from '@mui/material/styles';\n\n// change the theme to:\n// md: 800px, lg: 1400px, and others keep the same\nlet theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 800,\n      lg: 1400,\n      xl: 1536,\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider\n      theme={theme}\n    >\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}